在看过一遍twisted库中的test代码后
我对twisted中的数据流动有了以下看法。
建立一个网络传输有client，server两个部分，server复杂发数据，client复杂接收数据
每个部分的传输代码从上到下可以分为三层，factory，Protocol，transport
factory负责连接失败的最后处理，处理结果将提交给reactor，代表连接结束将结束结果提交给reactor的工作
Protocol负责处理传输接收到的数据，以及连接结束后的处理，比如将整个过程接收的数据存储，二次处理。
它可以用self.factory将数据传给factory。
transport负责io数据读取，读取io接口给予的数据
注：这里的分工没有硬性要求，只是给出了要实现的接口函数。函数怎么编都行，这里的只是基于
jdavisp3的github代码进行举例

负责连接的是connector，它负责完成两个点的数据连接。

所以数据是从connector->transport->protocol->factory

从reactor调用connectTCP开始，调用connector，connector接受的数据给内存，交给transport
transport通过io模块读取结果，传给Protocol。Protocol和factory可以互相传递信号。

